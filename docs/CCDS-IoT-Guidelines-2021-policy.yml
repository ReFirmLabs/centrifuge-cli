# version of the policy specification
policyVersion: 1.0

# This policy file maps the CCDS IoT Common Security Requirments Guidelines 2021 (CCDS-GR01-2021)
# to the security analysis provided by Binwalk Enterprise. In some areas where CCDS-GR01-2021 is not specific
# we provide our interpretation (for example, the definition of "out of date components").

# Standard files have two sections: 
#   rules: which define the policy for individual Binwalk analyzers to pass or fail
#   standard: which defines the standard and maps items in the standard to applicable rules

# For rules where you have confirmed there is not an issue you can add the item as an exception
# (for example private keys) 

rules:

  # Expired certificates can lead to insecure network services and exposed attack surfaces (Requirement 4)
  # and inappropriate certification practices (5)
  certificates:
    expired:
      allowed: false

      # also check for certificates expiring in upcoming period
      prevent_expiring: in 6 months

    # optional list of files that are omitted from this rule
    exceptions: 

  # Use of private keys could result in compromised public keys or 
  # insecure storage of user data. Impacts exposed attack surfaces (Requirement 4),
  # inappropriate certification practices (Requirement 5)
  privateKeys:
    allowed: false
    # optional list of files that are omitted from this rule
    exceptions:
      - /usr/*

  # Presence of hardcoded accounts and/or weak / guessable passwords (Requirement 6)
  passwordHashes:
    # whether defined user accounts are allowed or not
    allowUserAccounts: false

    # any hashes with the following algorithms will fail the policy check
    weakAlgorithms:
      - des
      - md5

  # Presence of critical flaws (potential 0-days) potentially create
  # exposed attack services (Requirement 4)
  code:
    flaws:
      # allow any potential flaws
      allowed: true

      # allow critical (emulated) flaws
      allowCritical: false

    # optional list of files that are omitted from this rule
    exceptions:

  # Evaluation of 3rd party components - addressing known vulnerabilities is important to
  # minimize attack surfaces (Requirement 4)
  # Interpreting Insecure as CVSS >= 7.0, and outdated is components with CVEs > 2 years
  guardian:
    # any CVEs found at or above this threshold will cause the policy check to fail
    cvssScoreThreshold: 7.0

    # any CVEs from this year or older will cause the policy check to fail
    # either put year (i.e., 2017) or # years (i.e., 2 would fail 2018 or earlier CVEs in 2020)
    cveAgeThreshold: 2

    # optional list of files that are omitted from this rule
    exceptions:

  # Binary hardening is recommended best practice to minimize attack surfaces (Requirement 4)
  # enabling this will be enforce binary hardening on all executables in the firmware. Optionally use
  # incldue directive to whitelist check on specific directories
  binaryHardening:
    # a list of hardening features required for ELF binaries
    # supported features: NX, PIE, RELRO, CANARY, STRIPPED
    requiredFeatures:
      #- NX
      #- PIE
      #- RELRO
      - CANARY
      #- STRIPPED
    # optional whitelist of binaries to check for above features.
    # if omitted, all binaries will be checked
    include:
  
  # Detection of known backdoors, exploits and malware results in appropriate certification
  # practices (Requirement 5) and opens new attack surfaces (Requirement 4)
  securityChecklist:
    # any security checklist results should result in failure in most policies
    allowed: false

  # Debug / network sniffing components should not be included in production firmware as best practice
  # relates to minimizing attack surfaces (Requirement 4)
  sbom:
    # components that are not allowed in firmware
    prohibitedComponents:
      - tcpdump
      - libpcap
      - gdbserver

    # Licensing is not part of OWASP standard 
    licenses:
      # use SPDX license identifiers (https://spdx.org/licenses/)
      # can use regex
      prohibitedLicenses:
  
      # components approved to use prohibited licenses
      exceptions:

standard:
  name: CCDS IoT Common Security Requirements Guidelines 2021

  description: >
    The Connected Consumer Device Security Council (CCDS) IoT
    Common Security Requirements define minimum standards to 
    receive the CCDS Certification Mark
    avoid when building, deploying or managing IoT systems 
    (https://www.ccds.or.jp/public/document/other/IoT分野共通セキュリティ要件ガイドライン2021年版_ver1.0.pdf).
    Binwalk security policies map to a subset of the Top 10 rules.
  
  mappings:
    - item: Requirement 4
      title: 4 - Minimize exposed attack surfaces
      description: >
        Binwalk detects a number of issues which can be a source
        of insecure networking services, including expired certificates,
        use of private keys, poor code, lack of binary hardening, or
        known backdoors and exploits. 
      policies:
        - certificates
        - privateKeys
        - code
        - guardian
        - binaryHardening
        - securityChecklist
        - sbom

    - item: Requirement 5
      title: 5 - Appropriate Certification Practices
      description: >
        Binwalk detects components with known vulnerabilities,
        poor code, lack of binary hardening and components that
        should not be included in production firmware.
      policies:
        - certificates
        - privateKeys
        - securityChecklist

    - item: Requirement 6
      title: 6 - Weak, Guessable, or Hardcoded Passwords
      description: >
        Binwalk detects hard coded accounts and weak passwords.
      policies:
        - passwordHashes
